(function () {
  'use strict';

  var toggle = document.querySelector('.visibility-icon');
  var input = document.getElementById('password');

  var onToggleClick = function onToggleClick() {
    if (input.type === 'password') {
      input.type = 'text';
      toggle.classList.add('visibility-icon--visible');
    } else {
      input.type = 'password';
      toggle.classList.remove('visibility-icon--visible');
    }
  };

  var passwordToggle = (function () {
    if (input && toggle) {
      toggle.addEventListener('click', onToggleClick);
    }
  });

  var inputs = Array.from(document.querySelectorAll('.input-group__input'));

  var handleBlur = function handleBlur(evt) {
    var input = evt.target;
    var label = input.previousElementSibling;

    if (!input.value.trim()) {
      label.classList.remove('input-group__label--on');
    }
  };

  var handleFocus = function handleFocus(evt) {
    var input = evt.target;
    var label = input.previousElementSibling;
    label.classList.add('input-group__label--on');
    input.addEventListener('blur', handleBlur);
  };

  var labelToggle = (function () {
    inputs.forEach(function (input) {
      return input.addEventListener('focus', handleFocus);
    });
  });

  var isEmail = (function (input) {
    if (typeof input !== 'string') {
      return false;
    }

    var emailInput = document.createElement('input');
    emailInput.type = 'email';
    emailInput.value = input;
    return emailInput.validity.valid;
  });

  var isPassword = (function (input) {
    if (typeof input !== 'string') {
      return false;
    }

    return input.length >= 6;
  });

  var form = document.querySelector('.modal__form');
  var button = form.querySelector('.modal__submit');
  var email = document.getElementById('email');
  var password = document.getElementById('password');
  var inputs$1 = [email, password];
  var labels = Array.from(form.querySelectorAll('.input-group__label'));
  var validity = {
    email: false,
    password: false
  };

  var colorInputs = function colorInputs(isValid) {
    inputs$1.forEach(function (input) {
      return input.classList.remove('input-group__input--error');
    });
    labels.forEach(function (label) {
      return label.classList.remove('input-group__label--error');
    });

    if (!isValid) {
      inputs$1.forEach(function (input) {
        return input.classList.add('input-group__input--error');
      });
      labels.forEach(function (label) {
        return label.classList.add('input-group__label--error');
      });
    }
  };

  var isFormValid = function isFormValid() {
    var arr = Object.values(validity);
    return arr.every(function (it) {
      return it === true;
    });
  };

  var handleValidity = function handleValidity() {
    var isValid = isFormValid();

    if (isValid) {
      button.classList.remove('button--error');
      button.classList.add('button--correct');
      colorInputs(isValid);
    } else {
      button.classList.remove('button--correct');
    }
  };

  var handleSubmit = function handleSubmit(evt) {
    evt.preventDefault();
    var isValid = isFormValid();

    if (isValid) {
      alert('OK');
    } else {
      button.classList.add('button--error', 'button--shake');
      setTimeout(function () {
        button.classList.remove('button--shake');
      }, 500);
      colorInputs(isValid);
    }
  };

  var handleInput = function handleInput(evt, validator, fieldName) {
    var value = evt.target.value.replace(/\s/g, '');
    evt.target.value = value;
    validity[fieldName] = validator(value);
    handleValidity();
  };

  var handleEmailInput = function handleEmailInput(evt) {
    return handleInput(evt, isEmail, 'email');
  };

  var handlePasswordInput = function handlePasswordInput(evt) {
    return handleInput(evt, isPassword, 'password');
  };

  var formValidation = (function () {
    email.addEventListener('input', handleEmailInput);
    password.addEventListener('input', handlePasswordInput);
    form.addEventListener('submit', handleSubmit);
  });

  passwordToggle();
  labelToggle();
  formValidation();

}());

//# sourceMappingURL=data:application/json;charset=utf8;base64,
